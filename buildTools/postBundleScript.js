const fs = require('fs');

const generatedHeader = '// This file is generated by the build process. Do not edit it directly.\n\n';

const polyFillFiles = fs.readdirSync('./buildTools/polyfills').filter((f) => f.endsWith('.js'));
const polyFills = polyFillFiles.map((f) => fs.readFileSync(`./buildTools/polyfills/${f}`, 'utf8'));

const tryStart = '\ntry {\n';

const beforeBody = generatedHeader + polyFills.join('\n') + tryStart;

const afterBody = `
} catch (err) {
  var _consoleElem = document.getElementById("consoleElem");
  if(!_consoleElem) {
    _consoleElem = document.createElement("pre");
    _consoleElem.id = "consoleElem";
    document.body.appendChild(_consoleElem);
  }

  _consoleElem.innerText += "--------------\\nError details:\\n";
  for (var key in err) {
    _consoleElem.innerText += key + ": " + err[key] + "\\n";
  }
  _consoleElem.innerText += "--------------\\n";
}`;

let main = fs.readFileSync('./dist/main.js', 'utf8');
main = beforeBody + main + afterBody;
fs.writeFileSync('./dist/main.js', main, 'utf8');
